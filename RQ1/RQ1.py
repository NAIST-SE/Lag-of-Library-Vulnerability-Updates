import json
import glob
import researchpy
import pandas as pd
from scipy import stats

def RQ1(vul_dict, report_dict):
    frame = {'fix_landing': [], 'client_landing': []}
    for vul in vul_dict:
        fix_landing = report_dict[vul]['release_type']
        for client in vul_dict[vul]:
            if client['adoption'] != None:
                frame['fix_landing'].append(fix_landing+'_landing')
                frame['client_landing'].append(client['adoption']+'_client_landing' if client['adoption'] != 'removed' else 'removal')
    df = pd.DataFrame(frame)
    crosstab, res = researchpy.crosstab(df['client_landing'], df['fix_landing'], test = 'chi-square') 
    print('='*50)
    print('(RQ1) A contingency table shows the frequency distribution of client-side fixing release update for each fixing release update.')
    print('='*50)
    print(crosstab)
    print(res)
    print('='*50)
    print()

if __name__ == '__main__':
    json_files = glob.glob('./rq1_data/*.json')
    vul_dict = dict()
    for fi in json_files:
        with open(fi) as f: vul_dict[fi.split('/')[-1][:-5]] = json.loads(f.read())

    report_files = glob.glob('../PQ/pq_data/*.json')
    report_dict = dict()
    for fi in report_files:
        with open(fi) as f: report_dict[fi.split('/')[-1][:-5]] = json.loads(f.read())

    RQ1(vul_dict, report_dict)
